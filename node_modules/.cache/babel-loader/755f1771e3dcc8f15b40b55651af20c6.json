{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MovieOverview/MovieOverview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Typography } from '@mui/material';\nimport MapChart from '../MapChart/MapChart';\nimport classNames from 'classnames';\nimport styles from './MovieOverview.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieOverview = props => {\n  _s();\n\n  const container = classNames(styles.container);\n  const image = classNames(styles.image);\n  const [onHover, setOnHover] = useState(false);\n  const title = props.title;\n  const year = props.year;\n  const imgURL = props.imgURL;\n  const releaseDate = props.releaseDate;\n  const runningTime = props.runningTime;\n  const rating = props.rating;\n  const ratingReason = props.ratingReason;\n  const genres = props.genres;\n  const plot = props.plot;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgURL,\n          className: image,\n          onMouseEnter: () => setOnHover(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        style: {\n          color: '#fff',\n          backgroundColor: 'grey'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-6\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        style: {\n          color: '#fff',\n          backgroundColor: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieOverview, \"otg3HlFMojAW6RPtQsd0wvo9yCc=\");\n\n_c = MovieOverview;\nMovieOverview.propTypes = {\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  runningTime: PropTypes.string.isRequired,\n  rating: PropTypes.string.isRequired,\n  ratingReason: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  plot: PropTypes.string.isRequired\n}; // MovieOverview.defaultProps = {\n// }\n\nexport default MovieOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieOverview\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MovieOverview/MovieOverview.js"],"names":["React","useState","useEffect","PropTypes","Box","Grid","Typography","MapChart","classNames","styles","MovieOverview","props","container","image","onHover","setOnHover","title","year","imgURL","releaseDate","runningTime","rating","ratingReason","genres","plot","color","backgroundColor","propTypes","string","isRequired","array"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Typography } from '@mui/material';\nimport MapChart from '../MapChart/MapChart'\n\n\nimport classNames from 'classnames';\nimport styles from './MovieOverview.module.css'\n\n\nconst MovieOverview = (props) => {\n    const container = classNames(styles.container);\n    const image = classNames(styles.image);\n\n    const [onHover, setOnHover] = useState(false)\n\n    const title = props.title\n    const year = props.year\n    const imgURL = props.imgURL\n    const releaseDate = props.releaseDate\n    const runningTime = props.runningTime\n    const rating = props.rating\n    const ratingReason = props.ratingReason\n    const genres = props.genres\n    const plot = props.plot\n\n\n    return (\n        <div>\n            <div className='row'>\n                <div className='col-3'>\n                    <img src={imgURL} className={image} onMouseEnter={() => setOnHover(true)} />\n                </div>\n                <div className='col-3' style={{color:'#fff', backgroundColor:'grey'}}>\n                    <div className='row-6'>\n                    {title}\n                    </div>\n                </div>\n                <div className='col-6' style={{color:'#fff', backgroundColor:'white'}}>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nMovieOverview.propTypes = {\n    title: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    imgURL: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    runningTime: PropTypes.string.isRequired,\n    rating: PropTypes.string.isRequired,\n    ratingReason: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    plot: PropTypes.string.isRequired\n}\n\n// MovieOverview.defaultProps = {\n// }\n\nexport default MovieOverview\n"]},"metadata":{},"sourceType":"module"}