{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MapChart/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst colorScale = scaleLinear().domain([0.29, 0.68]).range([\"#ffedea\", \"#ff5233\"]);\n\nconst MapChart = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv(`/vulnerability.csv`).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ComposableMap // projection=\"orthographic\"\n  , {\n    projectionConfig: {\n      center: [-5, 25]\n    },\n    children: [/*#__PURE__*/_jsxDEV(Graticule, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: _ref => {\n        let {\n          geographies\n        } = _ref;\n        return geographies.map(geo => {\n          const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MapChart/MapChart.js"],"names":["React","useEffect","useState","csv","scaleLinear","ComposableMap","Geographies","Geography","Sphere","Graticule","geoUrl","colorScale","domain","range","MapChart","data","setData","then","center","length","geographies","map","geo","d","find","s","ISO3","properties","ISO_A3","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,SALF,QAMO,mBANP;;AAQA,MAAMC,MAAM,GACV,wGADF;AAGA,MAAMC,UAAU,GAAGP,WAAW,GAC3BQ,MADgB,CACT,CAAC,IAAD,EAAO,IAAP,CADS,EAEhBC,KAFgB,CAEV,CAAC,SAAD,EAAY,SAAZ,CAFU,CAAnB;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAAE,oBAAF,CAAH,CAA0Bc,IAA1B,CAAgCF,IAAD,IAAU;AACvCC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,QAAC,aAAD,CACE;AADF;AAEE,IAAA,gBAAgB,EAAE;AAChBG,MAAAA,MAAM,EAAC,CAAC,CAAC,CAAF,EAAK,EAAL;AADS,KAFpB;AAAA,4BAME,QAAC,SAAD;AAAW,MAAA,MAAM,EAAC,SAAlB;AAA4B,MAAA,WAAW,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,YANF,EAOGH,IAAI,CAACI,MAAL,GAAc,CAAd,iBACC,QAAC,WAAD;AAAa,MAAA,SAAS,EAAET,MAAxB;AAAA,gBACG;AAAA,YAAC;AAAEU,UAAAA;AAAF,SAAD;AAAA,eACCA,WAAW,CAACC,GAAZ,CAAiBC,GAAD,IAAS;AACvB,gBAAMC,CAAC,GAAGR,IAAI,CAACS,IAAL,CAAWC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWJ,GAAG,CAACK,UAAJ,CAAeC,MAA3C,CAAV;AACA,8BACE,QAAC,SAAD;AAEE,YAAA,SAAS,EAAEN,GAFb;AAGE,YAAA,IAAI,EAAEC,CAAC,GAAGZ,UAAU,CAACY,CAAC,CAAC,MAAD,CAAF,CAAb,GAA2B;AAHpC,aACOD,GAAG,CAACO,MADX;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SATD,CADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAnCD;;GAAMf,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Sphere,\n  Graticule\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst colorScale = scaleLinear()\n  .domain([0.29, 0.68])\n  .range([\"#ffedea\", \"#ff5233\"]);\n\nconst MapChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    csv(`/vulnerability.csv`).then((data) => {\n      setData(data);\n    });\n  }, []);\n\n  return (\n    <ComposableMap\n      // projection=\"orthographic\"\n      projectionConfig={{\n        center:[-5, 25],\n      }}\n    >\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n      {data.length > 0 && (\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const d = data.find((s) => s.ISO3 === geo.properties.ISO_A3);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\n                />\n              );\n            })\n          }\n        </Geographies>\n      )}\n    </ComposableMap>\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}