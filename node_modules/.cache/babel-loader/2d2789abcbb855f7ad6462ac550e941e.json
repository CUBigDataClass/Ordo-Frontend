{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useIntersection = useIntersection;\n\nvar _react = require(\"react\");\n\nvar _requestIdleCallback = require(\"./request-idle-callback\");\n\nconst hasIntersectionObserver = typeof IntersectionObserver !== 'undefined';\n\nfunction useIntersection(_ref) {\n  let {\n    rootRef,\n    rootMargin,\n    disabled\n  } = _ref;\n  const isDisabled = disabled || !hasIntersectionObserver;\n  const unobserve = (0, _react).useRef();\n  const [visible, setVisible] = (0, _react).useState(false);\n  const [root, setRoot] = (0, _react).useState(rootRef ? rootRef.current : null);\n  const setRef = (0, _react).useCallback(el => {\n    if (unobserve.current) {\n      unobserve.current();\n      unobserve.current = undefined;\n    }\n\n    if (isDisabled || visible) return;\n\n    if (el && el.tagName) {\n      unobserve.current = observe(el, isVisible => isVisible && setVisible(isVisible), {\n        root,\n        rootMargin\n      });\n    }\n  }, [isDisabled, root, rootMargin, visible]);\n  (0, _react).useEffect(() => {\n    if (!hasIntersectionObserver) {\n      if (!visible) {\n        const idleCallback = (0, _requestIdleCallback).requestIdleCallback(() => setVisible(true));\n        return () => (0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n      }\n    }\n  }, [visible]);\n  (0, _react).useEffect(() => {\n    if (rootRef) setRoot(rootRef.current);\n  }, [rootRef]);\n  return [setRef, visible];\n}\n\nfunction observe(element, callback, options) {\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options);\n  elements.set(element, callback);\n  observer.observe(element);\n  return function unobserve() {\n    elements.delete(element);\n    observer.unobserve(element); // Destroy observer when there's nothing left to watch:\n\n    if (elements.size === 0) {\n      observer.disconnect();\n      observers.delete(id);\n      let index = idList.findIndex(obj => obj.root === id.root && obj.margin === id.margin);\n\n      if (index > -1) {\n        idList.splice(index, 1);\n      }\n    }\n  };\n}\n\nconst observers = new Map();\nconst idList = [];\n\nfunction createObserver(options) {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || ''\n  };\n  let existing = idList.find(obj => obj.root === id.root && obj.margin === id.margin);\n  let instance;\n\n  if (existing) {\n    instance = observers.get(existing);\n  } else {\n    instance = observers.get(id);\n    idList.push(id);\n  }\n\n  if (instance) {\n    return instance;\n  }\n\n  const elements = new Map();\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      const callback = elements.get(entry.target);\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n\n      if (callback && isVisible) {\n        callback(isVisible);\n      }\n    });\n  }, options);\n  observers.set(id, instance = {\n    id,\n    observer,\n    elements\n  });\n  return instance;\n}","map":{"version":3,"mappings":"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","names":["useIntersection","hasIntersectionObserver","IntersectionObserver","rootRef","rootMargin","disabled","isDisabled","unobserve","useRef","visible","setVisible","useState","root","setRoot","current","setRef","useCallback","el","undefined","tagName","observe","isVisible","useEffect","idleCallback","requestIdleCallback","cancelIdleCallback","element","callback","options","id","observer","elements","createObserver","set","delete","size","disconnect","observers","index","idList","findIndex","obj","margin","splice","Map","existing","find","instance","get","push","entries","forEach","entry","target","isIntersecting","intersectionRatio"],"sources":["../../client/use-intersection.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}