{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MapChart/MapChart.js\";\nimport React from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: \"100%\",\n  height: \"auto\"\n};\n\nconst MapChart = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    width: \"100%\"\n  },\n  children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n    width: 900,\n    height: 600,\n    projection: \"albersUsa\",\n    projectionConfig: {\n      scale: 900\n    },\n    style: mapStyles,\n    children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        disableOptimization: true,\n        geography: \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/examples/albers-usa/static/states.json\",\n        children: (geos, proj) => geos.map((geo, i) => /*#__PURE__*/_jsxDEV(Geography, {\n          cacheId: geo.properties.ID_1,\n          geography: geo,\n          projection: proj,\n          style: {\n            default: {\n              fill: \"#CFD8DC\"\n            }\n          }\n        }, geo.properties.ID_1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MapChart/MapChart.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","mapStyles","width","height","MapChart","scale","geos","proj","map","geo","i","properties","ID_1","default","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,OALF,EAMEC,MANF,QAOO,mBAPP;;AASA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;;AAKA,MAAMC,QAAQ,GAAG,mBACf;AAAK,EAAA,KAAK,EAAE;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAZ;AAAA,yBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,UAAU,EAAC,WAHb;AAIE,IAAA,gBAAgB,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAJpB;AAKE,IAAA,KAAK,EAAEJ,SALT;AAAA,2BAOE,QAAC,aAAD;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,mBAAmB,MADrB;AAEE,QAAA,SAAS,EAAC,iHAFZ;AAAA,kBAIG,CAACK,IAAD,EAAOC,IAAP,KACCD,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,CAAN,kBACP,QAAC,SAAD;AAEE,UAAA,OAAO,EAAED,GAAG,CAACE,UAAJ,CAAeC,IAF1B;AAGE,UAAA,SAAS,EAAEH,GAHb;AAIE,UAAA,UAAU,EAAEF,IAJd;AAKE,UAAA,KAAK,EAAE;AACLM,YAAAA,OAAO,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR;AADJ;AALT,WACOL,GAAG,CAACE,UAAJ,CAAeC,IADtB;AAAA;AAAA;AAAA;AAAA,gBADF;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMR,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React from \"react\"\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker\n} from \"react-simple-maps\"\n\nconst mapStyles = {\n  width: \"100%\",\n  height: \"auto\",\n}\n\nconst MapChart = () => (\n  <div style={{ width: \"100%\" }}>\n    <ComposableMap\n      width={900}\n      height={600}\n      projection=\"albersUsa\"\n      projectionConfig={{ scale: 900 }}\n      style={mapStyles}\n    >\n      <ZoomableGroup>\n        <Geographies\n          disableOptimization\n          geography=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/examples/albers-usa/static/states.json\"\n        >\n          {(geos, proj) =>\n            geos.map((geo, i) => (\n              <Geography\n                key={geo.properties.ID_1}\n                cacheId={geo.properties.ID_1}\n                geography={geo}\n                projection={proj}\n                style={{\n                  default: { fill: \"#CFD8DC\" },\n                }}\n              />\n            ))\n          }\n        </Geographies>\n      </ZoomableGroup>\n    </ComposableMap>\n  </div>\n)\n\nexport default MapChart\n"]},"metadata":{},"sourceType":"module"}