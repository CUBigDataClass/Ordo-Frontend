{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MapChart/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantize } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\nconst colorScale = scaleQuantize().domain([1, 10]).range([\"#ffedea\", \"#ffcec5\", \"#ffad9f\", \"#ff8a75\", \"#ff5533\", \"#e2492d\", \"#be3d26\", \"#9a311f\", \"#782618\"]);\n\nconst MapChart = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoAlbersUsa\",\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: _ref => {\n          let {\n            geographies\n          } = _ref;\n          return geographies.map(geo => {\n            const cur = data.find(s => s.id === geo.id);\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: colorScale(cur ? cur.unemployment_rate : \"#EEE\")\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this);\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MapChart/MapChart.js"],"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","scaleQuantize","csv","geoUrl","colorScale","domain","range","MapChart","data","setData","then","counties","geographies","map","geo","cur","find","s","id","unemployment_rate","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,GAAT,QAAoB,UAApB;;;AAEA,MAAMC,MAAM,GAAG,2DAAf;AAEA,MAAMC,UAAU,GAAGH,aAAa,GAC7BI,MADgB,CACT,CAAC,CAAD,EAAI,EAAJ,CADS,EAEhBC,KAFgB,CAEV,CACL,SADK,EAEL,SAFK,EAGL,SAHK,EAIL,SAJK,EAKL,SALK,EAML,SANK,EAOL,SAPK,EAQL,SARK,EASL,SATK,CAFU,CAAnB;;AAcA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,GAAG,CAAC,kCAAD,CAAH,CAAwCQ,IAAxC,CAA6CC,QAAQ,IAAI;AACvDF,MAAAA,OAAO,CAACE,QAAD,CAAP;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,UAAU,EAAC,cAA1B;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAER,MAAxB;AAAA,kBACG;AAAA,cAAC;AAAES,YAAAA;AAAF,WAAD;AAAA,iBACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,kBAAMC,GAAG,GAAGP,IAAI,CAACQ,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAA5B,CAAZ;AACA,gCACE,QAAC,SAAD;AAEE,cAAA,SAAS,EAAEJ,GAFb;AAGE,cAAA,IAAI,EAAEV,UAAU,CAACW,GAAG,GAAGA,GAAG,CAACI,iBAAP,GAA2B,MAA/B;AAHlB,eACOL,GAAG,CAACM,MADX;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WATD,CADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CA9BD;;GAAMb,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantize } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst colorScale = scaleQuantize()\n  .domain([1, 10])\n  .range([\n    \"#ffedea\",\n    \"#ffcec5\",\n    \"#ffad9f\",\n    \"#ff8a75\",\n    \"#ff5533\",\n    \"#e2492d\",\n    \"#be3d26\",\n    \"#9a311f\",\n    \"#782618\"\n  ]);\n\nconst MapChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n\n  return (\n    <>\n      <ComposableMap projection=\"geoAlbersUsa\">\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              const cur = data.find(s => s.id === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={colorScale(cur ? cur.unemployment_rate : \"#EEE\")}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default MapChart;\n"]},"metadata":{},"sourceType":"module"}