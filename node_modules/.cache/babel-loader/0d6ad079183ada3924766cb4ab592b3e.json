{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MovieOverview/MovieOverview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Typography } from '@mui/material';\nimport MapChart from '../MapChart/MapChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieOverview = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n  const title = props.title;\n  const year = props.year;\n  const imgURL = props.imgURL;\n  const releaseDate = props.releaseDate;\n  const runningTime = props.runningTime;\n  const rating = props.rating;\n  const ratingReason = props.ratingReason;\n  const genres = props.genres;\n  const plot = props.plot;\n\n  function handleToggle() {\n    setToggle(!toggle);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgURL,\n          style: {\n            display: 'block',\n            height: 'auto',\n            width: '100%'\n          },\n          onMouseEnter: () => setToggle(true),\n          onMouseLeave: () => setToggle(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), \" :\", toggle ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'block',\n            height: 'auto',\n            width: '100%',\n            backgroundColor: 'rgba(1,1,1,0.4)'\n          },\n          children: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        style: {\n          color: '#fff',\n          backgroundColor: 'grey'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row-6\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        style: {\n          color: '#fff',\n          backgroundColor: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieOverview, \"KMOoc8w16Lq5ZnA3xKzfamBycFo=\");\n\n_c = MovieOverview;\nMovieOverview.propTypes = {\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  runningTime: PropTypes.string.isRequired,\n  rating: PropTypes.string.isRequired,\n  ratingReason: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  plot: PropTypes.string.isRequired\n}; // MovieOverview.defaultProps = {\n// }\n\nexport default MovieOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieOverview\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MovieOverview/MovieOverview.js"],"names":["React","useState","useEffect","PropTypes","Box","Grid","Typography","MapChart","MovieOverview","props","toggle","setToggle","title","year","imgURL","releaseDate","runningTime","rating","ratingReason","genres","plot","handleToggle","display","height","width","backgroundColor","color","propTypes","string","isRequired","array"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Typography } from '@mui/material';\nimport MapChart from '../MapChart/MapChart'\n\nconst MovieOverview = (props) => {\n    const [toggle, setToggle] = useState(false)\n\n    const title = props.title\n    const year = props.year\n    const imgURL = props.imgURL\n    const releaseDate = props.releaseDate\n    const runningTime = props.runningTime\n    const rating = props.rating\n    const ratingReason = props.ratingReason\n    const genres = props.genres\n    const plot = props.plot\n\n    function handleToggle() {\n        setToggle(!toggle)\n    }\n\n    return (\n        <div>\n            <div className='row'>\n                <div className='col-3'>\n                <img src={imgURL} style={{display:'block',height:'auto',width:'100%'}} onMouseEnter={() => setToggle(true)} onMouseLeave={() => setToggle(false)}/> :\n                    {\n                        toggle ? \n                        <div style={{display:'block',height:'auto',width:'100%',backgroundColor:'rgba(1,1,1,0.4)'}}>\n                            hello\n                        </div> :\n                        ''\n                    }\n                </div>\n                <div className='col-3' style={{color:'#fff', backgroundColor:'grey'}}>\n                    <div className='row-6'>\n                    {title}\n                    </div>\n                </div>\n                <div className='col-6' style={{color:'#fff', backgroundColor:'white'}}>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nMovieOverview.propTypes = {\n    title: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    imgURL: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    runningTime: PropTypes.string.isRequired,\n    rating: PropTypes.string.isRequired,\n    ratingReason: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    plot: PropTypes.string.isRequired\n}\n\n// MovieOverview.defaultProps = {\n// }\n\nexport default MovieOverview\n"]},"metadata":{},"sourceType":"module"}