{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MovieOverview/MovieOverview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Typography } from '@mui/material';\nimport MovieCard from '../MovieCard/MovieCard';\nimport Chip from '@mui/material/Chip';\nimport classNames from 'classnames';\nimport styles from './MovieOverview.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieOverview = props => {\n  _s();\n\n  const container = classNames(styles.container);\n  const image = classNames(styles.image);\n  const middle = classNames(styles.middle);\n  const [onHover, setOnHover] = useState(false);\n  const title = props.title;\n  const year = props.year;\n  const imgURL = props.imgURL;\n  const releaseDate = props.releaseDate;\n  const runningTime = props.runningTime;\n  const rating = props.rating;\n  const ratingReason = props.ratingReason;\n  const genres = props.genres;\n  const plot = props.plot;\n  const tweets = ['1491255003268644866', '1383105268448305155', '463440424141459456'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(MovieCard, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        style: {\n          color: '#fff',\n          backgroundColor: 'white'\n        },\n        children: \"sdaf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieOverview, \"otg3HlFMojAW6RPtQsd0wvo9yCc=\");\n\n_c = MovieOverview;\nMovieOverview.propTypes = {\n  title: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  imgURL: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  runningTime: PropTypes.string.isRequired,\n  rating: PropTypes.string.isRequired,\n  ratingReason: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  plot: PropTypes.string.isRequired\n}; // MovieOverview.defaultProps = {\n// }\n\nexport default MovieOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieOverview\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/MovieOverview/MovieOverview.js"],"names":["React","useState","useEffect","PropTypes","Box","Grid","Typography","MovieCard","Chip","classNames","styles","MovieOverview","props","container","image","middle","onHover","setOnHover","title","year","imgURL","releaseDate","runningTime","rating","ratingReason","genres","plot","tweets","color","backgroundColor","propTypes","string","isRequired","array"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,QAAsC,eAAtC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,SAAS,GAAGJ,UAAU,CAACC,MAAM,CAACG,SAAR,CAA5B;AACA,QAAMC,KAAK,GAAGL,UAAU,CAACC,MAAM,CAACI,KAAR,CAAxB;AACA,QAAMC,MAAM,GAAGN,UAAU,CAACC,MAAM,CAACK,MAAR,CAAzB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMiB,KAAK,GAAGN,KAAK,CAACM,KAApB;AACA,QAAMC,IAAI,GAAGP,KAAK,CAACO,IAAnB;AACA,QAAMC,MAAM,GAAGR,KAAK,CAACQ,MAArB;AACA,QAAMC,WAAW,GAAGT,KAAK,CAACS,WAA1B;AACA,QAAMC,WAAW,GAAGV,KAAK,CAACU,WAA1B;AACA,QAAMC,MAAM,GAAGX,KAAK,CAACW,MAArB;AACA,QAAMC,YAAY,GAAGZ,KAAK,CAACY,YAA3B;AACA,QAAMC,MAAM,GAAGb,KAAK,CAACa,MAArB;AACA,QAAMC,IAAI,GAAGd,KAAK,CAACc,IAAnB;AAEA,QAAMC,MAAM,GAAG,CAAC,qBAAD,EAAwB,qBAAxB,EAA+C,oBAA/C,CAAf;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI,QAAC,SAAD,OAAef;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAE;AAACgB,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,eAAe,EAAC;AAA/B,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhCD;;GAAMlB,a;;KAAAA,a;AAkCNA,aAAa,CAACmB,SAAd,GAA0B;AACtBZ,EAAAA,KAAK,EAAEf,SAAS,CAAC4B,MAAV,CAAiBC,UADF;AAEtBb,EAAAA,IAAI,EAAEhB,SAAS,CAAC4B,MAAV,CAAiBC,UAFD;AAGtBZ,EAAAA,MAAM,EAAEjB,SAAS,CAAC4B,MAAV,CAAiBC,UAHH;AAItBX,EAAAA,WAAW,EAAElB,SAAS,CAAC4B,MAAV,CAAiBC,UAJR;AAKtBV,EAAAA,WAAW,EAAEnB,SAAS,CAAC4B,MAAV,CAAiBC,UALR;AAMtBT,EAAAA,MAAM,EAAEpB,SAAS,CAAC4B,MAAV,CAAiBC,UANH;AAOtBR,EAAAA,YAAY,EAAErB,SAAS,CAAC4B,MAAV,CAAiBC,UAPT;AAQtBP,EAAAA,MAAM,EAAEtB,SAAS,CAAC8B,KAAV,CAAgBD,UARF;AAStBN,EAAAA,IAAI,EAAEvB,SAAS,CAAC4B,MAAV,CAAiBC;AATD,CAA1B,C,CAYA;AACA;;AAEA,eAAerB,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport MovieCard from '../MovieCard/MovieCard';\n\nimport Chip from '@mui/material/Chip';\nimport classNames from 'classnames';\nimport styles from './MovieOverview.module.css'\n\n\nconst MovieOverview = (props) => {\n    const container = classNames(styles.container);\n    const image = classNames(styles.image);\n    const middle = classNames(styles.middle);\n\n    const [onHover, setOnHover] = useState(false);\n\n    const title = props.title;\n    const year = props.year;\n    const imgURL = props.imgURL;\n    const releaseDate = props.releaseDate;\n    const runningTime = props.runningTime;\n    const rating = props.rating;\n    const ratingReason = props.ratingReason;\n    const genres = props.genres;\n    const plot = props.plot;\n\n    const tweets = ['1491255003268644866', '1383105268448305155', '463440424141459456']\n\n\n    return (\n        <div>\n            <div className='row'>\n                <div className='col-2'>\n                    <MovieCard {...props} />\n                </div>\n                <div className='col-10' style={{color:'#fff', backgroundColor:'white'}}>\n                    sdaf\n                </div>\n            </div>\n        </div>\n    )\n}\n\nMovieOverview.propTypes = {\n    title: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n    imgURL: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    runningTime: PropTypes.string.isRequired,\n    rating: PropTypes.string.isRequired,\n    ratingReason: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    plot: PropTypes.string.isRequired\n}\n\n// MovieOverview.defaultProps = {\n// }\n\nexport default MovieOverview\n"]},"metadata":{},"sourceType":"module"}