{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/EmbeddedTweet/EmbeddedTweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Tweet } from 'react-twitter-widgets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmbeddedTweet = () => {\n  _s();\n\n  var tweets = ['1491255003268644866', '1383105268448305155', '463440424141459456'];\n  const [isLoading, setIsLoading] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 'auto',\n      height: 'auto',\n      margin: '1%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        overflow: 'auto'\n      },\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tweet, {\n          tweetId: tweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, tweet, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmbeddedTweet, \"5S7VQ8+9ArWv2AFPIfnY+LwrHeg=\");\n\n_c = EmbeddedTweet;\nexport default EmbeddedTweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmbeddedTweet\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/Ordo-Frontend/ordo-frontend/src/components/EmbeddedTweet/EmbeddedTweet.js"],"names":["React","useState","useEffect","Tweet","EmbeddedTweet","tweets","isLoading","setIsLoading","width","height","margin","overflow","map","tweet"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,uBAAtB;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,MAAIC,MAAM,GAAG,CAAC,qBAAD,EAAwB,qBAAxB,EAA+C,oBAA/C,CAAb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,MAAM,EAAC,MAAtB;AAA8BC,MAAAA,MAAM,EAAC;AAArC,KAAZ;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAACD,QAAAA,MAAM,EAAC,OAAR;AAAiBE,QAAAA,QAAQ,EAAC;AAA1B,OAAZ;AAAA,gBAEIN,MAAM,CAACO,GAAP,CAAYC,KAAD,iBACT;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;GAAMT,a;;KAAAA,a;AAmBN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Tweet } from 'react-twitter-widgets'\n\n\nconst EmbeddedTweet = () => {\n  var tweets = ['1491255003268644866', '1383105268448305155', '463440424141459456']\n  const [isLoading, setIsLoading] = useState(true);\n\n  return (\n    <div style={{width:'auto', height:'auto', margin:'1%'}}>\n      <div style={{height:'100vh', overflow:'auto'}}>\n        {\n          tweets.map((tweet) => (\n            <div key={tweet}>\n                <Tweet tweetId={tweet} />\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default EmbeddedTweet\n\n\n"]},"metadata":{},"sourceType":"module"}